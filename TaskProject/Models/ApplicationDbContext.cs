using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using TaskProject.Migrations;
using TaskProject.Models;
using TaskProject.Models.AchievementModels;
using TaskProject.Models.GoalModels;
using TaskProject.Models.LogsModels;

namespace TaskProject.Models
{
    public class ApplicationDbContext : IdentityDbContext<ApplicationUser>
    {
        public DbSet<Hobby> Hobbies { get; set; }
        public DbSet<Complication> Complications { get; set; }
        public DbSet<Catalog> Catalogs { get; set; }
        public DbSet<Goal> Goals { get; set; }
        public DbSet<Atribute> Atributes { get; set; }
        public DbSet<Repeat> Repeats { get; set; }
        public DbSet<Health> Healths { get; set; }
        public DbSet<Message> Messages { get; set; }
        public DbSet<Rating> Ratings { get; set; }
        public DbSet<Skill> Skills { get; set; }
        public DbSet<Aligment> Aligments { get; set; }
        public DbSet<Mood> Moods { get; set; }
        public DbSet<UserMood> UserMoods { get; set; }
        public DbSet<Achievement> Achievements { get; set; }
        public DbSet<UserAchievement> UserAchievements { get; set; }
        public DbSet<UserReward> UserRewards { get; set; }
        public DbSet<LogAccess> LogAccess { get; set; }
        public DbSet<LogEvent> LogEvents { get; set; }
        public DbSet<Note> Notes { get; set; }
        public DbSet<Notification> Notifications { get; set; }

        public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options)
            : base(options)
        {

        }

        protected override void OnModelCreating(ModelBuilder builder)
        {
            base.OnModelCreating(builder);

            builder.Entity<Atribute>()
                .HasOne(p => p.User)
                .WithMany(t => t.Atributes)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<Goal>()
                .HasOne(g => g.Skill)
                .WithMany(s => s.Goals)
                .OnDelete(DeleteBehavior.SetNull);

            builder.Entity<Goal>()
                .HasOne(c => c.Catalog)
                .WithMany(u => u.Goals)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<Health>()
                .HasOne<ApplicationUser>(h => h.User)
                .WithOne(u => u.Health)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<Catalog>()
                .HasOne<ApplicationUser>(c => c.User)
                .WithMany(u => u.Catalogs)
                .OnDelete(DeleteBehavior.Cascade);


            builder.Entity<UserMood>()
                .HasOne<ApplicationUser>(s => s.User)
                .WithMany(u => u.UserMoods)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<UserAchievement>()
                .HasOne<ApplicationUser>(s => s.User)
                .WithMany(u => u.UserAchievements)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<Note>()
                .HasOne<ApplicationUser>(n => n.User)
                .WithMany(u => u.Notes)
                .OnDelete(DeleteBehavior.Cascade);

            builder.Entity<Notification>()
                .HasOne<ApplicationUser>(n => n.User)
                .WithMany(u => u.Notifications)
                .OnDelete(DeleteBehavior.Cascade);

        }

        public void Initialize()
        {
            if (!Repeats.Any())
            {
                Repeats.AddRange(
                     new Repeat
                     {
                         RepeatId = 1,
                         Name = "Без повторений"

                     },
                    new Repeat
                    {
                        RepeatId = 2,
                        Name = "Ежедневное"
                    },
                    new Repeat
                    {
                        RepeatId = 3,
                        Name = "Ежемесячное"
                    },
                    new Repeat
                    {
                        RepeatId = 4,
                        Name = "Ежегодное"
                    }
                    );
            }

            if (!Complications.Any())
            {
                Complications.AddRange(
                    new Complication
                    {
                        ComplicationId = 1,
                        Name = "Легкая",
                        Damage = 5,
                        Exp = 10,
                        Gold = 2
                    },
                    new Complication
                    {
                        ComplicationId = 2,
                        Name = "Средняя",
                        Damage = 10,
                        Exp = 20,
                        Gold = 5
                    },
                    new Complication
                    {
                        ComplicationId = 3,
                        Name = "Тяжелая",
                        Damage = 25,
                        Exp = 50,
                        Gold = 10
                    }
                    );
            }

            if (!Ratings.Any())
            {
                Ratings.AddRange(
                    new Rating
                    {
                        RatingId = 1,
                        Name = "Начальный"
                    },

                    new Rating
                    {
                        RatingId = 2,
                        Name = "Улучшенный"
                    },
                    new Rating
                    {
                        RatingId = 3,
                        Name = "Совершенный"
                    }
                    );
            }

            if (!Aligments.Any())
            {
                AddRange(
                    new Aligment
                    {
                        AligmentId = 1,
                        Name = "Законопослушный добрый",
                        Description = "<p> Персонажи  с этим характером верят, что организованные сильные общества с хорошо работающим правительством могут работать, чтобы сделать жизнь лучше для большинства людей. </p> " +
                        "<p> Чтобы гарантировать качество жизни, надо создавать законы и подчиняться им. </p> " +
                        "<p> Когда люди уважают законы и стараются помогать друг другу, общество в целом процветает. По этой причине <b> законопослушные добрые персонажи </b> борются за вещи, которые принесут самые значительные выгоды большинству и меньше всего причинят вреда. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 2,
                        Name = "Нейтральный добрый",
                        Description = "<p> <b> Нейтральные добрые персонажи </b> верят, что равновесие сил важно, но интересы порядка и хаоса не стоят выше необходимости добра. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 3,
                        Name = "Хаотичный добрый",
                        Description = "<p> <b> Хаотичные добрые персонажи </b> — сильные индивидуалисты, отмеченные чертой доброты и благожелательности. Они верят во все достоинства добра и справедливости, но законы и правила им ни к чему.</p> " +
                        "<p> Их действия направляются по их собственному моральному компасу, хотя и доброму, но не всегда целиком согласному с остальным обществом.</p>" +
                        "<p> Они творят добро так, как они его понимают. Сильная сторона хаотично-доброго персонажа в сочетании доброго сердца и свободного духа. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 4,
                        Name = "Законопослушный нейтральный",
                        Description = "<p> Порядок и организация являются вещами первостепенной важности для персонажей с характером <b> законопослушный нейтральный </b>. </p> " +
                        "<p> Они верят в сильное и хорошо упорядоченное правительство, будь то тирания или великодушная демократия. " +
                        "<p> Выгоды организованности и систематизации перевешивают все вопросы морали, поднятые их деятельностью.</p>"
                    },
                    new Aligment
                    {
                        AligmentId = 5,
                        Name = "Истинно нейтральный",
                        Description = "<p> <b> Истинно нейтральный персонаж </b> не отдает предпочтение ни одному из путей как в выборе между добром и злом, так и в выборе между хаосом и порядком.</p>" +
                        "<p> Персонаж такого типа считает, что добро лучше зла, но по каким-либо причинам не может или не хочет следовать путём добра, когда этот путь требует от него каких-либо затрат, будь то деньги или необходимость подвергать свою жизнь опасности ради других. </p>" +
                        "<p> Такой персонаж предпочтёт жить среди добрых соседей и с добрым королём. Вполне возможно, он будет защищать таких соседей и короля, однако вряд ли добровольно отдаст за них свою жизнь. Маг, посвятивший себя полностью своему искусству, нейтрален. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 6,
                        Name = "Хаотичный нейтральный",
                        Description = "<p> <b> Хаотичные нейтральные персонажи </b> следует своим капризам. Они законченные индивидуалисты. Они ценят свою свободу, но не считают себя обязанными защищать свободу других. Они избегают властей, возмущаются, если их ограничивают в чём-либо, не чтят традиций. </p>" +
                        "<p> Хаотично нейтральные персонажи хоть и могут разрушать общественные организации, но если и делают это, то не для установления общемировой анархии.</p>" +
                        "<p> Для этого нужна мотивация – либо добрая (чтобы все жили свободно) либо злая (разделить людей и посеять между ними вражду). И хотя хаотично-нейтральные персонажи порой непредсказуемы, их поведение не носит случайный и беспричинный характер.</p>"
                    },
                    new Aligment
                    {
                        AligmentId = 7,
                        Name = "Законопослушный злой",
                        Description = "<p> <b>Законопослушные злые персонажи</b> методично получают то, что они желают, действуя в рамках собственного морального кодекса или в рамках законов, не обращая внимания на страдания окружающих. </p>" +
                        "<p> Целью может быть как личная выгода (типичный пример — злой колдун, пытающийся захватить мир или его часть), так и благополучие общества в таком виде, в каком его понимает конкретный персонаж. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 8,
                        Name = "Нейтральный злой",
                        Description = "<p> <b> Нейтральные злые персонажи</b> в первую очередь заняты собой и собственным продвижением. У них нет особых возражений против работы с другими, но часто многие из них действуют в одиночку. </p>" +
                        "<p> Единственный их интерес — продвижение вперёд. Если есть быстрый и лёгкий путь получить выгоду, будь он легален, сомнителен или очевидно нелегален, они им воспользуются. </p>" +
                        "<p> Хотя <b> нейтральным злым персонажам </b> не свойственен принцип «каждый сам за себя» хаотичных персонажей, они не будут колебаться, если можно предать своих друзей и компаньонов ради личной выгоды. Их верность основана на власти и деньгах, что делает их крайне благосклонными к взяткам. </p>"
                    },
                    new Aligment
                    {
                        AligmentId = 9,
                        Name = "Хаотичный злой",
                        Description = "<p> <b> Хаотичные злые персонажи </b> — гибель всего доброго и организованного. Ими движет только желание личной выгоды и удовольствия. </p> " +
                        "<p> Они совершенно не видят ничего плохого в том, чтобы взять то, что им хочется, любыми возможными способами. Законы и правительства — лишь инструменты слабаков, неспособных защитить себя. </p>" +
                        "<p> Сильные имеют право брать, что они захотят, а слабые нужны, чтобы их использовать." +
                        "<p> Когда <b>хаотичные злые персонажи</b> собираются вместе, ими движет не желание кооперироваться, но, скорее, желание противостоять сильным врагам. Такую группу может удержать вместе только сильный лидер, способный железной рукой заставить своих подчинённых повиноваться. Так как лидерство основывается исключительно на грубой силе, скорее всего, лидер будет сметён при первом признаке слабости любым, кто сможет каким угодно способом отобрать у него это положение. </p>"
                    }
                );
            }

            if (!Moods.Any())
            {
                AddRange(
                    new Mood()
                    {
                        Name = "Плохое",
                        LinkImg = "/img/moods/crying.svg",
                    },
                    new Mood()
                    {
                        Name = "Сонное",
                        LinkImg = "/img/moods/sleepy.svg",
                    },
                    new Mood()
                    {
                        Name = "Нормальное",
                        LinkImg = "/img/moods/normal.svg",
                    },
                    new Mood()
                    {
                        Name = "Веселое",
                        LinkImg = "/img/moods/laughing.svg",
                    },
                    new Mood()
                    {
                        Name = "Отличное",
                        LinkImg = "/img/moods/happy.svg",
                    }
                    );
            }

            if (!Achievements.Any())
            {
                AddRange(
                    new Achievement()
                    {
                        Name = "Уровень 2",
                        Description = "Получил 2 уровень",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevel2
                    },
                    new Achievement()
                    {
                        Name = "Уровень 5",
                        Description = "Получил 5 уровень",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevel5
                    },
                    new Achievement()
                    {
                        Name = "Уровень 10",
                        Description = "Получил 10 уровень",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevel10
                    },
                    new Achievement()
                    {
                        Name = "Уровень 15",
                        Description = "Получил 15 уровень",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevel15
                    },
                    new Achievement()
                    {
                        Name = "Уровень 20",
                        Description = "Получил 20 уровень",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevel20
                    },
                    new Achievement()
                    {
                        Name = "500 золота",
                        Description = "Получил 500 золота",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGold500
                    },
                    new Achievement()
                    {
                        Name = "1000 золота",
                        Description = "Получил 1000 золота",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGold1000
                    },
                    new Achievement()
                    {
                        Name = "5000 золота",
                        Description = "Получил 5000 золота",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGold5000
                    },
                    new Achievement()
                    {
                        Name = "10000 золота",
                        Description = "Получил 10000 золота",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGold10000
                    },
                    new Achievement()
                    {
                        Name = "10 выполненнных задач",
                        Description = "Выполнил 10 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGoals10
                    },
                    new Achievement()
                    {
                        Name = "100 выполненнных задач",
                        Description = "Выполнил 100 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGoals100
                    },
                    new Achievement()
                    {
                        Name = "1000 выполненнных задач",
                        Description = "Выполнил 1000 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGoals1000
                    },
                    new Achievement()
                    {
                        Name = "5000 выполненнных задач",
                        Description = "Выполнил 5000 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpGoals5000
                    },
                    new Achievement()
                    {
                        Name = "10 добавленных задач",
                        Description = "Добавил 10 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.AddGoals10
                    },
                    new Achievement()
                    {
                        Name = "100 добавленных задач",
                        Description = "Добавил 100 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.AddGoals100
                    },
                    new Achievement()
                    {
                        Name = "1000 добавленных задач",
                        Description = "Добавил 1000 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.AddGoals1000
                    },
                    new Achievement()
                    {
                        Name = "5000 добавленных задач",
                        Description = "Добавил 5000 задач",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.AddGoals5000
                    },
                    new Achievement()
                    {
                        Name = "5 уровень у навыка",
                        Description = "Получил 5 уровень у навыка",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelSkill5
                    },
                    new Achievement()
                    {
                        Name = "10 уровень у навыка",
                        Description = "Получил 10 уровень у навыка",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelSkill10
                    },
                    new Achievement()
                    {
                        Name = "25 уровень у навыка ",
                        Description = "Получил 25 уровень у навыка",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelSkill25
                    },
                    new Achievement()
                    {
                        Name = "50 уровень у навыка",
                        Description = "Получил 50 уровень у навыка",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelSkill50
                    },
                    new Achievement()
                    {
                        Name = "5 уровень у характеристики",
                        Description = "Получил 5 уровень у характеристики",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelAtribute5
                    },
                    new Achievement()
                    {
                        Name = "10 уровень у характеристики",
                        Description = "Получил 10 уровень у характеристики",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelAtribute10
                    },
                    new Achievement()
                    {
                        Name = "50 уровень у характеристики",
                        Description = "Получил 25 уровень у характеристики",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelAtribute25
                    },
                    new Achievement()
                    {
                        Name = "100 уровень у характеристики",
                        Description = "Получил 50 уровень у характеристики",
                        LinkImg = "/img/achievment.png",
                        AchievementType = (int)AchievementType.UpLevelAtribute50
                    }
                );
            }

            if (!Hobbies.Any())
            {
                AddRange(
                    new Hobby
                    {
                        Name = "Чтение",
                        Description = "Сложно представить себе более мужское занятие. Теодор Рузвельт был ненасытным читателем, как и большинство величайших людей в истории. Чтение позволяет вам установить связь с великими мыслителями и писателями, жившими на протяжении всей истории, даёт вам новые идеи, делает вас более умным и хорошо сформировавшимся человеком. Если обзавестись библиотечной карточкой, то чтение может стать совершенно бесплатным хобби. Чтобы выбрать книги для чтения, можно воспользоваться множеством рекомендательных списков."
                    },
                    new Hobby
                    {
                        Name = "Любительское радио",
                        Description = "Хотите стать частью тесного сообщества, с акцентом на радио и общении? Остановитесь на радиолюбительской связи. Хотя интернет заменил радио в качестве основной формы коммуникаций, сообщество радиолюбителей существует до сих пор. Любители этого хобби получают удовольствие от общения с людьми со всего мира напрямую и расширения своих знаний о теории радио. Кроме того, большинство операторов радио занимаются и общественно-полезными делами, становятся промежуточными узлами для передачи информации в случае природных катаклизмов или чрезвычайных ситуаций. Работа с радио подчиняется правилам местных комиссий по коммуникациям, и для такого хобби обычно нужно получать лицензию. Покупка нового радио может обойтись вам в копеечку, но на eBay полно предложений на б/у оборудование. Для подробной информации рекомендуем обратиться на сайт лиги радиолюбителей."
                    },
                    new Hobby
                    {
                        Name = "Игра на гитаре",
                        Description = "Умение играть на гитаре – это навык, который обеспечит вас и ваших близких развлечением на долгие годы. К тому же, девушкам нравятся парни, умеющие играть на гитаре. Лично я использовал своё умение перебирать струны, чтобы петь серенады для Кейт и извиняться за что-либо. На более поздних жизненных этапах вы можете собрать всю семью во дворе дома вокруг костра и петь вместе. Конечно же, обучение игре на любом инструменте – занятие, пригодное для мужчин, но у гитар есть преимущества. Они относительно дёшевы и начинающим на них проще учиться. В онлайне можно найти горы ресурсов с бесплатными уроками, включая и эту нашу статью о трёх аккордах, которые должен знать любой мужчина."
                    },
                    new Hobby
                    {
                        Name = "Танцы",
                        Description = "Ваш дедушка умел танцевать – почему бы не вытащить на свет вашего внутреннего танцора и не заняться танцами? Они могут повысить вашу самооценку, улучшить осанку и баланс. Также это очень весёлый способ получать кардионагрузки. И, конечно, девушкам нравятся парни, знающие, как вести партнёршу по танцполу. В большинстве городов можно найти танцевальные студии. Погуглите, и отправляйтесь побеседовать с инструкторами, чтобы увидеть их стиль и проверить их резюме. Если вы женаты или у вас есть девушка, то танцы – это прекрасный способ провести вечер. Если холостяк – отличный способ знакомств."
                    },
                    new Hobby
                    {
                        Name = "Паркур",
                        Description = "Паркур – это спорт, в котором вы прыгаете со зданий и через стены. Точнее, паркур – это физическое искусство движения через окружающую обстановку наиболее естественным и эффективным из возможных способов. Бывает захватывающе смотреть на человека, пересекающего местность немыслимыми способами, и очень вдохновляет зрелище того, как человеческое тело расширяет границы возможного. Сегодня мы считаем паркур интересным способом развлечения, но он был придуман как тактический способ улучшения физической формы солдат. Преимуществ такого хобби масса: это весело, это отличные физические нагрузки, оно расширяет границы ваших творческих способностей, это вызов как для тела, так и для разума, и он может спасти вам жизнь, если вам когда-либо придётся бегать и перепрыгивать препятствия. И это совершенно бесплатно. Вам нужны только руки, ноги и городской пейзаж."
                    },
                    new Hobby
                    {
                        Name = "Работа с деревом",
                        Description = "Я всегда восхищался людьми, способными взять обычный кусок дерева и придать ему какую-то полезную и красивую форму. Эти люди сами делают подарки, вместо того, чтобы покупать их, и могут с гордостью указать на какой-либо предмет мебели и сказать: «Я сам это сделал». Вы можете стать таким человеком, увлекшись замечательным хобби – работой с деревом. Кроме полезных навыков это хобби уменьшает уровень стресса и тренирует терпение. Поднося к дереву стамеску, легче войти в состояние, близкое к дзэну. Во многих технических образовательных учреждениях проводятся уроки работы с деревом. В интернете можно найти множество проектов для обработки дерева."
                    },
                    new Hobby
                    {
                        Name = "Уход за садом",
                        Description = "Возможно, один из самых мощных мужских образов для Америки – это фермер. Мужчина, полагающийся только на себя, самостоятельно обрабатывающий землю, чтобы обеспечить себя и свою семью. Для работы с землёй огромная усадьба не нужна – достаточно будет небольшого участочка во дворе. Если ваша работа заставляет вас проводить всё время в офисе с искусственным освещением и застоявшимся воздухом, то работа с землёй – отличное хобби для того, чтобы поупражняться и получить свою порцию солнечного света и свежего воздуха. Наблюдая за ростом сада, из семян до растений, вы обнаружите, что лучше стали чувствовать смену сезонов. Когда вы пожнёте свой небольшой урожай, удовольствие от достижения цели превзойдёт любую компьютерную игру. А приготовив первое блюдо с выращенными самостоятельно продуктами, вы почувствуете прилив мужской гордости."
                    },
                    new Hobby
                    {
                        Name = "Гребля на каноэ/каяках",
                        Description = "Неспешная гребля и передвижение по воде – одно из величайших удовольствий для мужчины. Занимаетесь ли вы этим с девушкой, или наслаждаетесь природой в одиночестве, с этим хобби сравнится мало развлечений. И хотя гребля может показаться такой же естественной, как езда на велосипеде, она требует определённых навыков. Начать можно с аренды оборудования, а если вам понравится, то можно купить себе лодку. Когда вы освоите эту науку, то можете перейти от лёгких прогулок до многодневных путешествий."
                    },
                    new Hobby
                    {
                        Name = "Вскрытие замков",
                        Description = "Вскрытие замков не только полезно в чрезвычайных ситуациях, это ещё и ужасно интересно – знать, что вы способны обмануть механизм, который все остальные считают непреодолимым и поддающимся только грубой силе. С определёнными навыками и знаниями взломщик может сохранить двери и сэкономить на вызове специалиста по замкам."
                    },
                    new Hobby
                    {
                        Name = "Реставрация классических автомобилей",
                        Description = "В минувшие дни мужчины, бывало, проводили в гаражах часы, возясь с автомобилями. Теперь машины стали сложнее и начали полагаться на компьютеры, и домашняя механическая работа вымирает. Однако, если у вас есть стремление стать механиком, вы всегда можете сделать своим хобби реставрацию классических авто. Вы узнаете инженерное дело, улучшите ваши навыки решения проблем, и познаете это ощущение победы, когда восстановленный вами двигатель мурчит, как котёнок. Такое хобби может обойтись довольно дорого. Придётся не только купить классическое авто – вам понадобится место, инструменты и изготовленные на заказ запчасти. Но время и деньги могут окупиться – полностью восстановленные автомобили можно дорого продать (хотя вам, возможно, и не захочется расставаться с вашим детищем). Для начала можете посетить сайт для любителей реставрации Second Chance Garage."
                    },
                    new Hobby
                    {
                        Name = "Барбекю/шашлыки",
                        Description = "Готовка тоже есть в нашем списке, но приготовление мяса на открытом огне – это отдельное хобби. Будь то мангал или гриль, поджаривание хорошего куска мяса и подача готового блюда приносят удовлетворение как разуму, так и желудку. Барьер для входа низок – вам нужен только гриль (мангал) и мясо. Когда вы освоитесь с инструментами и едой, можно начать экспериментировать с различными методами и видами мяса (и даже фруктами и овощами), делать собственные смеси специй, и конечно готовить вкусную еду для друзей и семьи. Рекомендуем наши обучающие ролики по приготовлению мяса."
                    },
                    new Hobby
                    {
                        Name = "Работа с металлом",
                        Description = "У работы с металлом есть все преимущества работы с деревом, только вместо сладкого запаха опилок вы окружаете себя восхитительно вредным запахом горящего металла. Мой шурин увлёкся работой с металлом в старших классах, и делает удивительные штуки: передние спинки кровати для украшения спальни, висячие цветочные горшки, садовые арки и прочее. В профтехучилище поблизости от вас наверняка могут быть курсы по работе с металлом. Metalworking.com – отличный сайт для поиска такой информации."
                    },
                    new Hobby
                    {
                        Name = "Стрельба по мишеням",
                        Description = "Научитесь получать удовольствие от стрельбы в тире и станьте опытным стрелком. Стрельба требует высокой концентрации и твёрдой руки. Тиры существуют в достаточном количестве, и в разных тирах можно найти разные виды стрельбы. Выбирайте между стендовой стрельбой, пистолетом, ружьём и т.п. Хобби может быть дорогим – пистолеты недёшевы, а стоимость патронов постоянно растёт. Вам также понадобится место для безопасной стрельбы – если у вас нет такого участка, придётся арендовать место в тире."
                    },
                    new Hobby
                    {
                        Name = "Коллекционирование",
                        Description = "Коллекционирование нравится многим мужчинам и непонятно большинству женщин. Женщины способны делать несколько дел одновременно, а мужской мозг настроен на концентрацию на одном предмете. Мы часто начинаем сильно увлекаться чем-либо. Если совместить эту особенность с фундаментальным стремлением мужчины к охоте – и получится мужская страсть к коллекционированию. Мужчина может проводить всё время в поисках последнего предмета для завершения коллекции. Она становится его страстью, его Белым китом. Конечно, завершение коллекции обычно приносит разочарование. Суть коллекционирования – в погоне. Выберите, что вам нравится – марки, бейсбольные карточки, антикварные пишущие машинки, что угодно. Только не слишком увлекайтесь."
                    },
                    new Hobby
                    {
                        Name = "Пение",
                        Description = "Если вы любите петь в душе или подпевать радио по пути на работу, возможно, вам следует плотнее заняться пением. Вам может показаться, что существуют всего два варианта – либо вы профессиональный рок-певец, либо использовать ваш голос в продуктивных и развлекательных целях не получится. Ничего подобного. Существует большое количество сообществ любителей пения, хоров, караоке-баров (где часто по выходным проводят соревнования), а если вы всерьёз решите заняться пением, можно даже организовать собственную группу. Всегда старайтесь оттачивать своё умение, берите уроки пения и углубляйтесь в теорию музыки и навыки выступлений."
                    },
                    new Hobby
                    {
                        Name = "Походы",
                        Description = "Современный человек беспокоен и несчастлив оттого, что потерял контакт с природой. Каждому мужчине необходимо регулярно возвращаться к природе ради физического и умственного здоровья. Он периодически должен отвлекаться от всего и ночевать под звёздами. Оставьте позади своё рабочее место в офисе, проведите несколько дней, дыша свежим воздухом и сидя у костра. Ещё одно очевидное преимущество походов – это самый бюджетный способ «уйти от всего». Это прекрасная возможность улучшить ваши навыки житья на природе, обрести духовную близость с приятелями, а также побыть наедине с близким человеком."
                    },
                    new Hobby
                    {
                        Name = "Корабль в бутылке",
                        Description = "Классическое хобби пожилых людей – сборка сложных моделек в стеклянной бутылке. Удивите детей вашей коллекцией кораблей в бутылке! Они проведут остаток своего детства, пытаясь понять, как вы это сделали. Размещение корабля в бутылке требует хорошей концентрации, терпения и уверенной руки. Обычно модель корабля строится снаружи с лежащими мачтами. После внедрения её в бутылку вы поднимаете мачты при помощи длинных щипцов. Кроме этого вы можете заниматься изготовлением 'невозможных бутылок', размещая в них такие объекты, как колоды карт или теннисные мячики."
                    },
                    new Hobby
                    {
                        Name = "Изготовление свечек",
                        Description = "Когда-то изготовление свечек было прибыльным и чрезвычайно важным делом. Электричество убило эту профессию, но свечки всё равно проникают во многие дома в роли создателей уюта и ароматических устройств. Кому не нравится наблюдать прохладным вечером за мерцающим огоньком, или вдыхать приятный аромат ранним утром? Продающиеся в магазинах свечки могут быть дорогими, а домашние будут дешёвыми – к тому же, их легко научиться делать самому. Понадобятся только воск, фитиль и ёмкости."
                    },
                    new Hobby
                    {
                        Name = "Тренажерный зал",
                        Description = "Некоторые мужчины поднимают с утра тяжести, чтобы привести в идеальную форму не только тело, но и дух. Если вы только начинаете заниматься, вам может быть иногда тяжело найти в себе мотивацию поднимать тяжести или отправляться на пробежку. Но когда вы начнёте входить в форму, вы придумаете, как структурировать свой день, чтобы впихнуть в него час физических занятий. Вместо похода в гараж или работы по дереву вы пробуете увеличивать вес в становой тяге. Быть сильным не только практично – это также улучшает ваш внешний вид (привет, девчонки!) и вообще очень круто знать, что вы можете оторвать от земли 200 кг."
                    },
                    new Hobby
                    {
                        Name = "Охота",
                        Description = "Если вам хочется вернуться в «круговорот жизни», пора отправляться на охоту. Преимущества охоты многочисленны. Во-первых, она даёт вашей семье шанс получить доступ к качественному постному мясу без антибиотиков и гормонов (и даже аммиака), которые встречаются в большинстве продающихся в магазинах продуктов. Во-вторых, она возвращает вам контакт с природой. В-третьих, вы будете поддерживать дикую природу, поскольку потраченные на лицензии и оборудование средства передаются агентствам по охране окружающей среды. В-четвёртых, даже если вы ничего не подстрелите, охота даёт вам возможность для усиления дружбы с приятелями, от чего сильно зависит ваше счастье в целом."
                    },
                    new Hobby
                    {
                        Name = "Резка по дереву",
                        Description = "Что, если вам интересно работать с деревом, но у вас нет денег на организацию полноценного столярного места? Попробуйте резку ножом. Понадобится только нож, кусочек мягкого дерева, кресло-качалка, курительная трубка, и самое главное – куча времени. Строгание ножом – один из тех вариантов времяпрепровождения, что помогают вам расслабиться и успокоить нервы после напряжённой работы. Книгу по этому искусству можно взять в библиотеке. Там вы найдёте множество идей и планов для начала."
                    },
                    new Hobby
                    {
                        Name = "Геокэшинг",
                        Description = "У вас не прошла детская любовь к игре в прятки? Всегда хотели отправиться на охоту за сокровищами? Тогда для вас может подойти геокэшинг. Люди во всём мире прячут объекты или контейнеры в разных местах и размещают их координаты в онлайне. Другие, вооружившись GPS-навигаторами, ищут эти «сокровища». Это прекрасный повод выйти из дома и изучить те части города и пригородов, где вы ещё никогда не были. Больше информации по этому вопросу можно найти на ресурсе geocaching.com."
                    },
                    new Hobby
                    {
                        Name = "Моделирование",
                        Description = "Моделирование, или создание копий автомобилей, самолётов, кораблей, возможно, было интересно вам, когда вы были ещё ребёнком. Но что мешает вам возобновить это хобби, когда вы выросли? Моделирование оттачивает ваше внимание к деталям и мотивирует на изучение истории тех вещей, с которыми вы работаете. К тому же, у вас появится что-нибудь интересное, что можно будет разместить в офисе или «мужском уголке» вашего дома. Этим очень легко заняться – отправляйтесь на Amazon или в местный хобби-магазин, и покупайте набор, в котором практически всегда есть все инструкции и необходимые предметы."
                    },
                    new Hobby
                    {
                        Name = "Золотоискательство",
                        Description = "Это увлечение не сделает из вас миллионера, но может стать интересным развлечением с самоокупаемостью, а может быть и источником дополнительного дохода. Золотоискательство – уже не чисто коммерческое предприятие, каким оно было ранее. В современном мире это обычно одно из развлечений на свежем воздухе, которым может заниматься вся семья, обычно – на небольшом ручье. Начать можно с простой лопаты и золотопромывочного ковша, а со временем можно перейти на более профессиональные промывочный жёлоб и землесос. Быть на берегу любого ручья – уже развлечение, но опытный золотоискатель знает, что львиную долю его профессии занимает фаза исследований: где золото было раньше, куда оно пойдёт и где будет накапливаться, как драгоценный металл ведёт себя в природе. Только после этого можно отправляться на природу, зная, что вы увеличили свои шансы на успех. Таким способом можно стать как туристом, так и золотоискателем."
                    },
                    new Hobby
                    {
                        Name = "Работа с кожей",
                        Description = "Запах кожи возбуждает в человеке первобытные чувства и ту часть, что всегда наслаждалась рассказами про ковбоев и индейцев. Работа с кожей – отличный способ воссоединиться со своим внутренним ковбоем и научиться истинно мужскому ремеслу. Опытный кожевник способен создать множество товаров: кошельки, сумки, ремни, кобуры, сёдла. Минус в том, что это хобби довольно дорогое. Вам потребуются всяческие особые инструменты. Для начала можно купит стартовый набор в магазине Tandy Leather Factory. Там есть всё необходимое для изготовления небольших предметов вроде кошелька или брелока. При помощи стартового набора вы сможете оценить ваш интерес перед тем, как угрохать крупные суммы на большие проекты."
                    },
                    new Hobby
                    {
                        Name = "Боулинг",
                        Description = "Фред Флинстоун, Гомер Сипмсон, Ральф Крамден и Чувак. Что у этих знаменитых персонажей общего? Они играли в боулинг. В 1950-е мужчины собирались в боулинг-клубах и присоединялись к спортивным командам. Это был способ провести время с другими мужчинами, выпить пивка и покурить сигару. Боулинги стали убежищем для мужественности, в то время как дом был феминизирован постоянным присутствием в нём домохозяйки. Боулинг хорош тем, что это хобби можно разделить со своими друзьями. Кроме того, он позволяет вам носить эксклюзивную мужскую футболку для боулинга. Так что звоните приятелям и сколачивайте команду."
                    },
                    new Hobby
                    {
                        Name = "Стрельба из лука",
                        Description = "Огнестрельное оружие практически заменило лук и стрелы как в охоте, так и в самозащите. Но чувство, связанное с возвращением к корням, может принести вам особенное удовольствие. Если пистолет можно сравнить с кувалдой, то лук и стрелы – с кисточкой художника. Лук позволяет вам создать связь с одним из самых примитивных видов оружия, которое работает только от человеческой силы. Это тихое, повторяющееся занятие, требующее концентрации, которое может по-настоящему успокоить нервы. Лук и стрелы редко используются в охоте (хотя никто не запрещает это делать), большое удовлетворение можно получить и от стрельбы по мишеням, оттачивая мастерство до того уровня, когда вы сможете сбить яблоко с чьей-нибудь головы (образно выражаясь). Простые луки для новичков можно купить недорого, поэтому таким хобби можно заниматься прямо сразу, у себя во дворе (но убедитесь в безопасности этого занятия). Существует специальные стрельбища с мишенями в виде животных, разбросанных среди деревьев."
                    },
                    new Hobby
                    {
                        Name = "Сурвивализм",
                        Description = "Выживальщики часто имеют плохую репутацию в популярной культуре, над ними издеваются по телевизору – но это может оказаться интересным и полезным занятием для человека, желающего обеспечить защиту и выживание в случае, когда дерьмо попадёт в вентилятор. Выживание – это не только приобретение запасов для чрезвычайных ситуаций, но и приобретение нужных навыков, а также знаний о стратегиях выживания. Это хобби может стать дорогим, но не обязательно – особенно если брать самое необходимое в качестве запасов, а потом концентрироваться на получении навыков (многие из которых можно тренировать во дворе)."
                    },
                    new Hobby
                    {
                        Name = "Написание писем",
                        Description = "У возвращения к забытому искусству написания писем есть много преимуществ, и это может стать довольно приятным хобби. Можно приобрести такие прикольные инструменты для написания писем, как различные канцтовары и чернильные ручки. Напишите письма друзьям и родственникам. Кто-нибудь обязательно напишет вам в ответ, и вы можете начать долгую переписку с ними. Участвуйте в программах переписки, например, 'дружба по переписке с солдатами(США)'. Солдаты обожают получать письма, напишите им что-нибудь ободряющее. Отыщите другие сообщества для переписки."
                    },
                    new Hobby
                    {
                        Name = "Боевые искусства",
                        Description = "Преимуществ изучения боевых искусств масса: приобретение навыков самозащиты, упрочнение дисциплины, улучшение концентрации и здоровья, установление связи с мужской традицией, удовлетворение своего внутреннего воина. Боевых искусств существуют тысячи – вам можно будет выбрать то, что подходит лично для вас. Проведите расследование, посетите школы, найдите дисциплину и инструктора, подходящих именно для вас. Можно увлечься смешанными единоборствами, или таким популярным их видом, как бокс."
                    },
                    new Hobby
                    {
                        Name = "Метание ножей и топоров",
                        Description = "Ножи и топоры – это круто. Ещё бы. Поэтому, метание их в качестве спорта и хобби – это тоже круто. Мужчины любят бросать вещи – мячи для бейсбола и баскетбола, камни, снежки, и т.п. Почему же не добавить к этому набору ещё и лезвия. Можно соревноваться с друзьями и родственниками, с самим собой – на длину и точность броска, ну и, естественно, готовиться к зомби-апокалипсису. Это сравнительно недорогое хобби с невысокой кривой обучения. Берите метательные ножи и топоры, и изучайте тонкости этого занятия."
                    },
                    new Hobby
                    {
                        Name = "Пешеходный туризм",
                        Description = "Нет ничего лучше хайкинга для того, чтобы расслабиться, подышать воздухом и восстановить душевные силы мужчины. Хайкингом в большинстве случаев можно заниматься абсолютно бесплатно. Вам понадобится лишь пара прочной обуви и место для прогулок, будь то поля неподалёку от дома или тропа в парке. Обычно место для хайкинга можно найти недалеко от дома, или же быстро добраться до него на машине."
                    },
                    new Hobby
                    {
                        Name = "Курение трубки",
                        Description = "У большинства мужчин есть пороки – какое-то удовольствие в жизни, небезопасное или вредное для здоровья, которым можно заниматься умеренно. Для многих мужчин это табак – обычно в виде сигары или трубки. Можно, конечно, прийти в магазин и купить что-то дешёвое. А можно стать знатоком и ценителем табака, разобраться, чем один табак отличается от другого, откуда они происходят, и найти то, что нравится вам. Пусть специалист в магазине объяснит вам, что да как. Конечно же, для этого необходим и личный опыт. Курите табак (запивая его виски), и находите лучшие его сорта, которые помогут вам расслабиться и улыбаться до конца дня."
                    },
                    new Hobby
                    {
                        Name = "Велосипед",
                        Description = "Сейчас езда на велосипеде активно возрождается, как среди городских хипстеров, так и среди начинающих спортсменов. Все подряд занимаются пятикилометровыми пробежками; а вот участие в велопробеге – вещь довольно редкая. Да и простые прогулки по городу с использованием лишь силы ваших ног могут доставить вам удовольствие. Ещё один вариант – горные покатушки, среди плюсов которых можно отметить время, проведённое на природе. Можно даже заняться длительными путешествиями на двух колёсах – такое приключение может быть отличной идеей."
                    },
                    new Hobby
                    {
                        Name = "Обжарка кофе",
                        Description = "Сегодняшние высокотехнологичные и крупные заведения по обжарке кофе выдают тысячи килограмм зёрен, обладающих одинаковым внешним видом и вкусом. Конечно, массово производимые продукты легче использовать, и они приемлемы на вкус – но самостоятельная обжарка кофе сможет обеспечить вам лучшую чашечку напитка из всех, что вы пробовали. Это ещё и дешевле магазинного продукта. Можно приобрести машинку для обжарки, или делать это на гриле при помощи посуды для приготовления попкорна. Чтобы развить хобби, можно жарить кофе для друзей, родственников, и даже продавать готовый продукт соседям. Дополнить его можно поиском антикварных предметов для приготовления кофе, вроде ручных кофемолок, или изучением различных методов приготовления напитка."
                    },
                    new Hobby
                    {
                        Name = "Аквариумистика",
                        Description = "Аквариумистике не менее 1500 лет – она существует гораздо дольше, чем большинство описанных здесь занятий. В XIX веке это было хобби для богатых, поскольку аквариумы необходимо было греть газом, а позже – электричеством. Только в 1950-х это хобби стало доступным для всех. Сегодня оно стало популярным и его можно встретить как в домах, так и на приёме у стоматолога."
                    },
                    new Hobby
                    {
                        Name = "Командный спорт",
                        Description = "Каждому мужчине, хоть нерду, хоть атлету, стоит заниматься спортом в команде. Физические упражнения способствуют повышению уровня тестостерона (современным мужчинам это крайне нужно, наш средний уровень тестостерона постоянно снижается), поддерживают ваше здоровье и физическую форму, отгоняют депрессию и снимают умственное напряжение. Спорт, в котором соревновательный дух мужчин может найти выход, особенно важен для воспитания мужественности. Займитесь футболом, баскетболом или чем-то ещё с друзьями, или сходите в специальную секцию. Вид спорта не имеет значения, главное, чтобы разгонялась кровь и стучало сердце."
                    },
                    new Hobby
                    {
                        Name = "Езда на мотоцикле",
                        Description = "Многие мужчины любят мотоциклы и езду на мотоциклах – от ковыряния в гараже до езды по пересечённой местности. Удовольствия от этого хобби простираются дальше, чем простые километры пути и технические знания."
                    },
                    new Hobby
                    {
                        Name = "Безделушки и антиквариат",
                        Description = "Лучший способ это делать – выбрать определённую нишу. Это сделает вашу работу проще и даст вам почувствовать азарт охоты за чем-то конкретным вместо праздного шатания в поисках выгодной сделки. Это могут быть, к примеру, антикварные бритвенные принадлежности, карманные ножи и прочее. Выберите подходящую тему, и вы сможете найти относящиеся к ней вещи."
                    },
                    new Hobby
                    {
                        Name = "Сдача металлолома и поиск при помощи металлодетектора",
                        Description = "Поиск антикварных вещей основан на вещах, имеющих ценность. Но также можно превращать чужой мусор в деньги. То, что ранее просто выбрасывалось – перерабатывается и превращается в ваши деньги. Вам нужен только небольшой магнит и простейшие знания о различных металлах и их ценности. После этого можно начинать собирать металлолом и отвозить его на приёмку."
                    },
                    new Hobby
                    {
                        Name = "Гольф",
                        Description = "Гольф – величественный и возвышенный спорт. Опрятная одежда, элегантные движения, подстриженные газоны. Игра настоящих джентльменов. Мало какие способы собраться вместе и провести несколько часов в компании друг друга будут лучше, чем гольф. Ему тяжело научиться, но это добавляет интереса игре. Вы почти всегда состязаетесь против других и самого себя. В других видах спорта часто нужно просто быть лучше соперника, но в гольфе часть удовольствия состоит в улучшении своей игры. Вы всегда можете что-то сделать для улучшения своих качеств вне зависимости от других игроков."
                    },
                    new Hobby
                    {
                        Name = "Страйкбол",
                        Description = "Стрельба на полигоне из огнестрельного оружия – дорогое удовольствие. Раньше в страйкбол играли только дети, а сегодня на рынке можно найти точные копии почти любого существующего оружия. Если полицейские и военные используют страйкбол для тренировок, это можно делать и вам. Можно развлечься, улучшить тактические навыки – просто найдите сообщество любителей страйкбола, участвуйте в соревнованиях и симуляциях. Это почти как пейнтбол, только ещё более реалистично."
                    },
                    new Hobby
                    {
                        Name = "Выжигание по дереву",
                        Description = "Если вы пока не готовы к столярному делу, но хотите поработать с деревом – это отличный вариант хобби. Выжигание, или пирография – это получение рисунка на куске дерева или другого органического материала при помощи похожего на ручку инструмента. Ему очень легко научиться, а вхождение будет стоить вам не более 2000-3000 р. Для выжигания найти обучающие материалы в онлайне тяжелее, чем для работы с деревом – но они там есть. Это не так здорово, как самому сделать стул, но выжигание требует внимания к деталям, терпения и мастерского владения инструментом."
                    },
                    new Hobby
                    {
                        Name = "Писательство и ведение дневника",
                        Description = "Многие мужчины постараются писать чаще, но по моему опыту гораздо лучше относиться к этому, как к хобби – как к тому, что вы делаете в свободное время, пусть даже по нескольку минут пару раз в день. Этим не всегда можно похвастаться, как в случае с другими увлечениями, но это приносит удовлетворение и помогает на время избавиться от тисков реальности."
                    },
                    new Hobby
                    {
                        Name = "Хождение под парусом",
                        Description = "Многие мужчины мечтали о возможности выйти в море по своему желанию. Хождение под парусом включает владение древними искусствами: предсказанием погоды, навигацией, навыками работы с верёвками, и т.п. Вы возвращаетесь во времена жёстких бородатых мужчин, сражавшихся с бурными морями и разгневанными китами, даже когда просто пересекаете спокойные воды небольшого озера. Это буквально глоток свежего воздуха, а также обилие физических и умственных упражнений. Это хобби может показаться дорогим, и оно точно может быть таким, но эту особенность можно сгладить, посещая занятия, арендуя лодки и т.п. Не нужно покупать лодку за кучу денег просто, чтобы начать заниматься парусным спортом. Также этим может наслаждаться вся ваша семья, а не только вы один. Тащите с собой супругу и детей и сделайте это традицией выходного дня!"
                    },
                    new Hobby
                    {
                        Name = "Сомелье",
                        Description = "Выберите вашу отраву: крафтовое пиво, вино, скотч, текила… Возможности получения наслаждения от стаканчика алкоголя ограничены лишь вашим воображением. Разбирающиеся в алкоголе люди не идут за будвайзером, а отправляются в местную небольшую пивоварню. Выберите спиртную нишу и обучайтесь. Можно стать экспертом по поводу процедуры изготовления алкоголя, знатоком качественных брендов и знать, когда и какая продукция выходит на рынок в ближайшем будущем. Можно получить удовольствие от собирательства – поиск нового сорта виски и совместное его распитие с друзьями может доставить немало удовольствия."
                    },
                    new Hobby
                    {
                        Name = "Дайвинг",
                        Description = "Можно стать сразу любителем-археологом и биологом, записавшись в школу дайвинга и занявшись исследованием рыб и древних кораблекрушений. Мало какие хобби дают такой азарт – так что ищите школу и начинайте!"
                    },
                    new Hobby
                    {
                        Name = "Моделирование железных дорог",
                        Description = "Это хобби можно отнести к обычному моделированию, но его уникальность в том, что вы можете построить не только один предмет для коллекции, но сделать целую сцену, по которой будут двигаться маленькие поезда. Этим хобби наслаждались Джонни Кэш, Джо Ди Маджо, Уолт Дисней, Том Хэнкс, Фрэнк Синатра, Уоррен Баффет и многие другие. Вы обучитесь многим дисциплинам, включая основы математики и физики, электрику, создание сцен и дизайн. Это не просто детская железная дорога с паровозиком, ездящим вокруг ёлки. Начать можно с сайта Национальной ассоциации моделистов железных дорог."
                    },
                    new Hobby
                    {
                        Name = "Скалолазание",
                        Description = "В этом списке можно встретить хайкинг и альпинизм. Но скалолазание – спорт отдельный. Вы не взбираетесь на склоны гор, вы покоряете отвесные обрывы, и часто не за красивый вид, а из-за физического азарта, связанного с тем, что вы только что забрались на отвесную стену. Когда вы подыскиваете следующую небольшую точку опоры и прокладываете путь наверх, то используются не только ваши физические навыки, но и навыки анализа и решения проблем."
                    },
                    new Hobby
                    {
                        Name = "Историческая реконструкция",
                        Description = "Мужчинам важно культивировать ностальгическое отношение к истории. А есть ли лучший метод погружения в историю, чем принять участие в исторической реконструкции? Можно воспроизводить конкретную битву, или же представлять общий исторический период. Реконструкциями занимались давно, ещё со времён Древнего Рима, когда мужчины воспроизводили известные исторические баталии. Это даёт вам шанс почувствовать на себе одежду воинов тех времён, их мысли, и обучиться многим вещам вне зависимости от того, что именно вы воссоздаёте. Это хобби действительно позволяет вам побыть в чужой шкуре человека давно минувших дней. Также это шанс немного обучить истории зрителей."
                    },
                    new Hobby
                    {
                        Name = "Пчеловодство",
                        Description = "Первые свидетельства разведения пчёл относятся ко времени в 4500 лет назад, к древнему Египту. Это хобби стало очень популярным в США в 80-х, когда Бёрт Шавиц удачно вывел на рынок своё увлечение под маркой «Burt’s Bees» (на Netflix есть хороший документальный фильм о нём, «Burt’s Buzz»). Это комбинирует небольшую опасность и преодоление страха с хорошим возвратом на вложенные усилия – мёдом! Но сначала нужно ознакомиться с местными правилами содержания пчёл, особенно в городских районах. Это хобби легко масштабировать – начать можно с одного улья, а затем расширяться по необходимости. Подробности есть на сайте Brushy Mountain Bee Farm."
                    },
                    new Hobby
                    {
                        Name = "Винил",
                        Description = "Прослушивание винила также заставляет вас концентрироваться на альбоме в целом, а не прыгать между любимыми синглами. Вы поглощаете его как произведение искусства, а не воспринимаете, как четыре минуты развлечения – а часто именно таким альбом музыканты и подразумевали."
                    },
                    new Hobby
                    {
                        Name = "Наблюдение за птицами",
                        Description = "Любительская орнитология предлагает много преимуществ собирательства, организованный сбор знаний об определённом предмете и даже азарт охоты – и всё это бесплатно. Вместо того, чтобы покупать предметы и захламлять ими дом, вы ведёте дневник находок или вычёркиваете виды из списка. Для молодых людей это хобби кажется времяпрепровождением стариков, но даже мне, в возрасте почти 30 лет, птицы уже кажутся чуть более интересными, чем раньше. Возможно, что всё дело в их миролюбии или в зависти к их возможности летать – в любом случае, это красивые создания, обладающие таким же разнообразием в окрасе, формах и повадках, как люди. Наблюдение за птицами – это развлечение и удовольствие, которое можно получить за время короткой прогулки и за время долгого поиска определённых редких видов, а также при изучении этих существ, которым мы, люди, так стараемся подражать. Берите бинокль и вперёд!"
                    },
                    new Hobby
                    {
                        Name = "Работа по дому",
                        Description = "Некоторые мужчины изо всех сил открещиваются от того, чтобы сделать что-то по дому, и считают это неприятной обязанностью. Но для многих других это вполне приятный способ провести выходной. Закончить подвал, выполнить необходимое обслуживание дома, перекрасить комнату, прибраться в гараже – это шанс поработать руками и обрести новый навык."
                    },
                    new Hobby
                    {
                        Name = "Настольные игры",
                        Description = "Дуайт Дэвид Эйзенхауэр любил играть в бридж со своими коллегами до самого утра. Уинстон Черчилль любил сыграть в маджонг и джин рамми с домашними перед ужином. Многие из отцов-основателей, включая Франклина, Джефферсона и Мэдисона, любили шахматы. Президенты США, от Рузвельта до Трумана играли в покер с советниками. Абрахам Линкольн играл в нарды с сыновьями."
                    },
                    new Hobby
                    {
                        Name = "Волонтёрство",
                        Description = "Вместо того, чтобы посвящать всё своё время своим целям, почему бы не помочь другим через волонтёрство. Помогая другому, вы можете найти своё предназначение, по-другому взглянуть на свои проблемы, побороть предубеждения и т.п. И хотя мужчинам, конечно же, необходимо какое-то время на то, чтобы побыть одним, проводить время, помогая другим – это тоже прекрасный способ восстановиться."
                    },
                    new Hobby
                    {
                        Name = "Фотография",
                        Description = "Если вы всегда хотели рисовать, но у вас не получалось – попробуйте фотографию. Цифровые камеры и ПО для редактирования дешевеют, и фотография становится более популярным и доступным хобби. Преимущество её в том, что с ней можно комбинировать и другие занятия. Любите прогулки? Сделайте фото природы. Нравится ходить по ресторанам? Сфотографируйте их все. В онлайне существует активное сообщество фотографов, и многие любители этого хобби ведут бесплатные сайты, обучающие фотографированию."
                    },
                    new Hobby
                    {
                        Name = "Сёрфинг",
                        Description = "Этим хобби может наслаждаться лишь определённая часть населения, живущая на берегах – но эти люди часто строят всю свою жизнь вокруг этого занятия. Прогулка по морю на лодке – это прекрасно, но это сильно отличается от ощущения непосредственного присутствия на воде при помощи доски для сёрфинга. Вы чувствуете каждую волну, адреналин, и страдаете от поражения, когда теряете доску. Вы соревнуетесь с собой и с самой матерью-природой. Мало какие занятия так сильно объединят вас с природой, как катание на волнах. Там, где это хобби распространено, невозможно упустить специализированные магазины. Посетите один из них, расскажите, что хотите начать заниматься сёрфингом, и готовьтесь выглядеть глупо во время нескольких первых попыток."
                    },
                    new Hobby
                    {
                        Name = "Бильярд",
                        Description = "Каждый раз просматривая фильм 'Бильярдист', я испытываю искушение отправиться в заполненную дымом бильярдную и стать мастером кия. Бильярд сочетает в себе стратегию, геометрию, психологию. Это также прекрасный способ провести время с друзьями. Если вы не смогли убедить жену, что игровая комната будет неполной без бильярдного стола, отправляйтесь в ближайшую бильярдную или боулинг. За игру нужно будет заплатить не очень много – конечно, если вас не обыграет профессионал."
                    },
                    new Hobby
                    {
                        Name = "Альпинизм",
                        Description = "Если вы любите походы, хайкинг, и ищете новых приключений, тогда обратитесь к альпинизму. Почему альпинисты лезут в горы? Потому, что горы существуют! Мало какие вещи доставляют столько же удовлетворения, как забраться на вершину после утомительного подъёма, насладиться завораживающим видом и тем, что вы только что покорили гору. Рекомендуем хорошую статью с советами по альпинизму."
                    },
                    new Hobby
                    {
                        Name = "Хождение по канату",
                        Description = "Это хобби началось в 70-х годах на кампусе одного из колледжей, когда группа друзей-альпинистов натянули канат между двумя деревьями и стали подначивать друг друга на то, чтобы не только пройти по нему, но и исполнить какие-нибудь акробатические трюки. С тех пор это стало не только популярным способом проводить время у студентов, но и одним из занятий на тимбилдинге. В сегодняшней вариации этого хобби верёвка протягивается между деревьями на высоте 30-50 см над землёй. Обычно люди пытаются просто пройти по всей её длине и не упасть, а не то, чтобы ещё и показывать какие-то трюки. Это требует не только хорошей физической формы и практики, но и умственной концентрации и стойкости. Это также отличный способ побыть на природе, не отвлекаясь на электронные устройства, и, конечно, этим может заниматься любое количество людей, что делает хождение по канату отличным социальным занятием. Научившись ходить по канату, можно пробовать учить различные трюки. Начать довольно просто – найдите канат, пару деревьев и вперёд!"
                    },
                    new Hobby
                    {
                        Name = "Готовка",
                        Description = "Не устаём повторять: каждый мужчина должен уметь готовить. Преимуществ у этого умения тысячи: оно делает вас независимым, экономит деньги от покупок готовой еды, производит впечатление на девушек, помогает оставаться здоровым (видели состав фаст-фуда?), и это просто приносит удовольствие. Есть вам приходится каждый день, поэтому можно научиться и получать от этого удовольствие. Коме того, это недорогое и доступное хобби. В дальнейшем можно перейти на более экзотические инструменты и продукты, но поскольку на кухне можно найти основные ингредиенты и инструменты, отправляйте готовую еду прочь."
                    },
                    new Hobby
                    {
                        Name = "Пилотирование",
                        Description = "Многие из самых мужественных мужчин в истории покоряли небеса — Чарльз Линдберг, Чак Йегер, Уайли Пост. Может, вы не будете бить рекорды, но всё-таки сможете парить, как орёл. Конечно, крупнейшим препятствием для этого хобби будет его стоимость. Это дорого. Лётные уроки обойдутся в несколько тысяч долларов, а лицензия – в несколько сотен. А ещё вам понадобится самолёт. Некоторые люди комбинируют любовь в полётам с любовью к механике, конструируя собственные самолёты. Но всё равно, вам нужно будет место для его хранения, за которое придётся оплачивать аренду ежемесячно. Но несмотря на высокую стоимость хобби, многие знакомые пилоты-любители говорят мне, что оно однозначно того стоит – это чувство полной свободы в воздухе."
                    },
                    new Hobby
                    {
                        Name = "Фокусы",
                        Description = "Каждому мужчине следует выучить парочку фокусов, чтобы удивить друзей, поразить девушек и развлечь детишек. Мало какими хобби заниматься так же весело, как практикой фокусов. А после того, как люди будут просить вас раскрыть секрет трюка, вы долго будете ходить с улыбкой на лице. Тренироваться в показе фокуса ещё и ещё раз, для того, чтобы всё прошло абсолютно гладко – это такая работа, которая не похожа на работу. И каждый мужчина знает, что единственный интересный способ делать покупки – это покупки в магазине фокусов. Фокусы – хобби недорогое, вам потребуется хорошая книга и колода карт. А затем можно постепенно повышать сложность трюков до тех пор, пока не распилите пополам тёщу в гостиной."
                    },
                    new Hobby
                    {
                        Name = "Изучение языков",
                        Description = "Мало какие хобби можно так однозначно отнести к полезным занятиям, как изучение иностранных языков. Как часто вы хотели иметь возможность общаться с официантом, учеником, родителем, жертвой – и не моли. И как часто вы хотели бы говорить на местном языке во время путешествия? Изучение языка может быть сложным, но если подумать, возможность говорить на разных языках – это очень круто. Можно найти курсы в учебных заведениях или попробовать методы самостоятельного изучения, типа Rosetta Stone. Ключ – в постоянной практике, или вы никогда не улучшите свои навыки и не сохраните уже выученное."
                    },
                    new Hobby
                    {
                        Name = "Ведение блога",
                        Description = "Писательство – хобби мужское. Но блог вносит в это занятие новые возможности. Блог может стать выходом для вашего желания поделиться чем-то, чем вы увлекаетесь и в чём разбираетесь, с другими. Можно знакомиться с людьми всего мира, разделяющими ваши интересы, и вести интересные дискуссии, а также находить друзей. В своём блоге можно уведомлять родственников и друзей о происходящем с вами (мамы обожают читать блоги детей). Блог можно использовать как свой дневник – неиссякаемый источник мыслей и фотографий, на которые вы впоследствии будете смотреть. Блог можно использовать для продвижения карьеры, создания сети и вашего персонального бренда. Неважно, по какой причине вы начинаете блог, он может научить вас техническим вопросам – загрузке картинок и видео, веб-дизайну, онлайн-маркетингу и проч. Это такая деятельность, преимущества которой можно недооценить, пока не начнёшь ею заниматься, но затем она может полностью вас захватить."
                    },
                    new Hobby
                    {
                        Name = "Пейнтбол",
                        Description = "Помните, как ребёнком вы играли в войнушку с друзьями, при помощи воображаемых гранат, базук и пуль? Теперь, когда вы стали большим мальчиком, вы всё равно можете играть в войнушку – но на этот раз вы можете почувствовать на себе удар шарика с краской, летящего со скоростью 150 км/ч. Поверьте мне, это сильно повышает эмоциональный отклик. В пейнтбол играть не слишком дорого – аренда пистолета, картриджа с CO2, маски и шариков на весь день обойдётся вам в сумму порядка $30. А если увлечётесь, можете закупить своё оборудование и платить только за использование площадок."
                    },
                    new Hobby
                    {
                        Name = "Фехтование",
                        Description = "Этот спорт существует со времён древних греков и римлян, и является истинно мужским занятием. Примите участие в традиции, которой обучались рыцари и лорды старых времён, в последних настоящих дуэлях. Воспитывайте чувство баланса, координацию, гибкость и концентрацию, обучаясь древнему искусству отражения ударов противника. В фехтовании используют три типа оружия: рапиру, саблю и шпагу. У них разный вес и разные правила использования."
                    },
                    new Hobby
                    {
                        Name = "Пивоварение",
                        Description = "Субботнее утро. По телевизору покажут матч с участием вашей любимой команды, и вы пригласили на просмотр друзей. Какими напитками вы будете их угощать? Можно, конечно, сгонять в магазин, взять упаковочку Miller High Life – но разве не будет круче и как-то мужественнее предложить им пиво собственного изготовления? Это возможно, если вы начнёте варить пиво в качестве хобби. Начать это довольно просто и недорого. На сайте The Simple Dollar есть прекрасная пошаговая инструкция с фотографиями и расписаны все расходы. Когда вы лучше познакомитесь с процессом варки пива, можно начинать эксперименты со вкусами и раздавать свой сорт, выпущенный в ограниченном количестве, в качестве подарков."
                    },
                    new Hobby
                    {
                        Name = "Рисование",
                        Description = "Многие мужчины не занимаются рисованием, поскольку считают, что не имеют к нему врождённого таланта. Может и так, но курсы и практика могут улучшить ваши способности. Рисование – наиболее доступный из видов искусства. Несколько карандашей и альбом займут вас надолго. Для живописи нужно чуть побольше оборудования и средств, в зависимости от её вида. Акварели дешевле (и их легче очищать), чем масляные краски. В большинстве магазинов хобби и искусства проводятся мастер-классы по рисованию. Если вам этого мало, вы всегда можете посмотреть видеоуроки от белого человека с величайшей причёской-афро в истории, Боба Росса, в его передаче «Радость рисования»."
                    },
                    new Hobby
                    {
                        Name = "Любительская астрономия",
                        Description = "Космос, последний фронтир. Вам, вероятно, не удастся побывать в космосе, но вас всё ещё может поразить его грандиозность, даже если вы будете в это время у себя во дворе. Вы удивитесь, сколько всего разного можно увидеть в космосе при помощи небольшого телескопа или мощного бинокля. Если вы хотите заглядывать в глубокий космос, вам понадобится мощный телескоп, который обойдётся вам в сумму порядка $1000. Но за этим может последовать и долгожданный результат, когда вы обнаружите что-либо, находясь у себя во дворе, что пропустили даже специалисты из НАСА. Астрономы-любители сделали несколько крупных открытий. Заниматься астрономией – не значит просто глазеть в телескоп. Это значит, узнавать как можно больше об удивительной Вселенной из книг, шоу, лекций и статей на GeekTimes. Начать можно ещё до покупки телескопа, зазубрив созвездия и связанные с ними истории."
                    },
                    new Hobby
                    {
                        Name = "Генеалогия",
                        Description = "Генеалогия – забавная вещь. Это хобби кажется ужасно скучным с точки зрения наблюдателя. Но когда вы увлечётесь ею, она может полностью захватить вас и стать тем, что вы искренне любите. Яблоко от яблони недалеко падает, но откуда вы знаете, какое вы яблоко, если вы не знаете, откуда вы упали? Каждый мужчина должен знать и понимать свои корни. Вы больше поймёте о том, почему вы такой, какой есть, и почему таковы ваши родители, и их родители, и т.п. Вы научитесь ценить людей, благодаря которым появились вы. Начав строить ваше семейное древо, вы удивитесь длине линий, ведущих к вам. Вы не просто отдельный человек – у вас длинная родословная, и ваши предки в каком-то смысле являются частью вас. Начните строить дерево, поговорив с родственниками, которые уже могли заниматься этим, а также можно воспользоваться имеющимися в интернете специализированными сайтами."
                    },
                    new Hobby
                    {
                        Name = "Вязание",
                        Description = "Вязание? Вязание?! То, что обожает ваша бабушка, и то, благодаря чему ваша двоюродная бабушка сделала вам шарф на рождество? Да, вязание. Это не такое бабское занятие, каким его себе представляют мужчины. Мужчины изобрели вязание, и пора вернуть себе место в его истории. Первыми профессиональными вязальщиками были мужчины, они работали в Европе в XVI веке. А ещё, конечно же, вязали узлы моряки. Они вязали рыболовные сети и свитера, чтобы не мёрзнуть. Сегодня вязание возвращается в качестве мужского занятия. Это и полезно, и расслабляет. Один мой друг научился вязать, когда служил в Боливии, и был единственным мужчиной в клубе любителей вязания в юридической школе. А его мужественность бесспорна. Посмотрите это видео про вязание и мужчин."
                    },
                    new Hobby
                    {
                        Name = "Программирование",
                        Description = "Тем, чем в 1950-х было увлечение любительским радио, сегодня стало программирование. Многие мужчины сделали это своей профессией, но существуют и миллионы тех, кто на работе занимается чем-то другим, а в свободное время программирует для удовольствия. Есть люди, делающие дурацкие онлайн-игры, полезные приложения с открытым кодом и классные веб-проекты. Изучать можно множество языков программирования. Мне лично нравится веб-программирование, и уроки на W3Schools позволят вам выучить и связанные с ним языки, и такие технологии, как SQL и CSS, совершенно бесплатно."
                    },
                    new Hobby
                    {
                        Name = "Бег с препятствиями и мультигонки",
                        Description = "Бег с препятствиями вырос из тренировочных курсов для военных, и это идеальный спорт для бегунов, которым скучно бегать по 5-10 км. Бег на многие километры, преодоление стен, ползание под колючей проволокой укрепят ваши силы, кардиосистему и ловкость, и проверят вас на физическую и моральную стойкость."
                    },
                    new Hobby
                    {
                        Name = "Рыбалка",
                        Description = "Может быть, убивать оленя или медведя – это не ваше. Но вы всё равно можете получить все преимущества добычи еды своими силами и единения с природой, если отправитесь на рыбалку. Рыбалка – классическое хобби для мужчин. Отличный способ для приятелей — сильнее сдружиться, а для отцов и сыновей — провести время вместе. Стоимость хобби для начинающего не слишком велика. Приличная удочка и катушка обойдутся вам в $50, а приманка и наживка – в несколько долларов. В некоторых местах для ловли рыбы требуется разрешение, поэтому необходимо свериться с правилами перед тем, как отправляться на рыбалку. Кроме того, рекомендую сразу научиться, как отцепляться от крючка."
                    }
                    );
            }

            SaveChanges();
        }

        private void AddNotification(object sender, NotificationEventArgs e)
        {

            Notifications.Add(new Notification()
            {
                Name = e.Name,
                DateCreate = DateTime.Now,
                UserId = e.UserId
            });

            SaveChanges();
        }

        public async Task AddLogAccess(string email, string log, string userAgent)
        {
            await LogAccess.AddAsync(new LogAccess()
            {
                UserName = email,
                Date = DateTime.Now,
                Log = log,
                UserAgent = userAgent
            });
            await SaveChangesAsync();
        }

        public async Task GetAchievementsAsync(ApplicationUser user)
        {
            List<Achievement> achievements = await Achievements.ToListAsync();

            foreach (var achievement in achievements)
            {
                if (!user.UserAchievements.Exists(a => a.AchievementId == achievement.AchievementId))
                {
                    user.UserAchievements.Add(new UserAchievement()
                    {
                        Achievement = achievement
                    });
                }
            }
            await SaveChangesAsync();
        }
        private void CompleteAchievement(UserAchievement achievement)
        {
            achievement.IsOpen = true;
            achievement.SetDate = DateTime.Now;

            Update(achievement);
            SaveChanges();

            AddNotification(this, new NotificationEventArgs($"Достижение получено {achievement.Achievement.Name}", achievement.UserId));
        }
        private void CheckAchievements(string userId)
        {
            ApplicationUser user = Users.Where(u => u.Id == userId)
                .Include(u => u.UserAchievements)
                .Include(u => u.Catalogs)
                .Include(u => u.Skills)
                .Include(u => u.Atributes)
                .Include(u => u.UserAchievements)
                .SingleOrDefault();

            CheckAchievements(user);
        }
        private void CheckAchievements(ApplicationUser user)
        {
            foreach (var userUserAchievement in user.UserAchievements)
            {
                userUserAchievement.Achievement =
                    Achievements.SingleOrDefault(a => a.AchievementId == userUserAchievement.AchievementId);

                List<Goal> goals = user.Goals;

                if (userUserAchievement.Achievement != null && !userUserAchievement.IsOpen)
                    switch ((AchievementType)userUserAchievement.Achievement.AchievementType)
                    {
                        case AchievementType.AddGoals10:
                            if (goals.Count == 10) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.AddGoals100:
                            if (goals.Count == 100) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.AddGoals1000:
                            if (goals.Count == 1000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.AddGoals5000:
                            if (goals.Count == 5000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGoals10:
                            if (goals.Count(g => g.IsComplete) > 10) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGoals100:
                            if (goals.Count(g => g.IsComplete) > 100) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGoals1000:
                            if (goals.Count(g => g.IsComplete) > 1000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGoals5000:
                            if (goals.Count(g => g.IsComplete) > 5000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGold500:
                            if (user.CurrentGold > 500) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGold1000:
                            if (user.CurrentGold > 1000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGold5000:
                            if (user.CurrentGold > 5000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpGold10000:
                            if (user.CurrentGold > 10000) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevel2:
                            if (user.CurrentLevel > 2) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevel5:
                            if (user.CurrentLevel > 5) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevel10:
                            if (user.CurrentLevel > 10) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevel15:
                            if (user.CurrentLevel > 15) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevel20:
                            if (user.CurrentLevel > 20) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelSkill5:
                            if (user.Skills.Exists(s => s.Lvl > 5)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelSkill10:
                            if (user.Skills.Exists(s => s.Lvl > 10)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelSkill25:
                            if (user.Skills.Exists(s => s.Lvl > 25)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelSkill50:
                            if (user.Skills.Exists(s => s.Lvl > 50)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelAtribute5:
                            if (user.Atributes.Exists(a => a.Lvl > 5)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelAtribute10:
                            if (user.Atributes.Exists(a => a.Lvl > 10)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelAtribute25:
                            if (user.Atributes.Exists(a => a.Lvl > 25)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelAtribute50:
                            if (user.Atributes.Exists(a => a.Lvl > 50)) CompleteAchievement(userUserAchievement);
                            break;
                        case AchievementType.UpLevelAtribute100:
                            if (user.Atributes.Exists(a => a.Lvl > 100)) CompleteAchievement(userUserAchievement);
                            break;
                    }
            }
        }

        public async Task AddGoalAsync(Goal goal)
        {
            switch (goal.RepeatId)
            {
                case 1:
                    {
                        break;
                    }
                default:
                    {
                        goal.GoalEnd = goal.GoalStart;
                        break;
                    }
            }

            if (goal.SkillId == 0)
            {
                goal.SkillId = null;
            }

            await Goals.AddAsync(goal);

            AddNotification(goal, new NotificationEventArgs($"Задача добавлена: {goal.Name}", goal.UserId));

            await SaveChangesAsync();
        }
        public async Task EditGoalAsync(Goal goal)
        {
            if (goal.SkillId == 0)
            {
                goal.SkillId = null;
            }

            switch (goal.RepeatId)
            {
                case 1:
                    {
                        break;
                    }
                default:
                    {
                        goal.GoalEnd = goal.GoalStart;
                        break;
                    }
            }

            goal.SeriesCount = 0;
            goal.PassCount = 0;

            Update(goal);
            await SaveChangesAsync();
        }
        public async Task DeleteGoalAsync(Goal goal)
        {

            Goals.Remove(goal);
            await SaveChangesAsync();
        }
        public async Task CompleteGoal(Goal goal, ApplicationUser user)
        {
            switch (goal.RepeatId)
            {
                case 1:
                    {
                        goal.IsComplete = true;
                        break;
                    }
                case 2:
                    {
                        goal.GoalEnd = goal.GoalEnd.Value.AddDays(1);
                        break;
                    }
                case 3:
                    {
                        goal.GoalEnd = goal.GoalEnd.Value.AddMonths(1);
                        break;
                    }
                case 4:
                    {
                        goal.GoalEnd = goal.GoalEnd.Value.AddYears(1);
                        break;
                    }
            }

            goal.FinishCount++;
            goal.SeriesCount++;
            goal.PassCount = 0;

            user.CurrentExp = user.CurrentExp + goal.Complication.Exp;
            user.CurrentGold = user.CurrentGold + goal.Complication.Gold;

            if (goal.Skill != null)
            {
                goal.Skill.LvlUp += AddNotification;
                goal.Skill.RatingUp += AddNotification;

                goal.Skill.ExpUp();
            }

            user.CheckLvl();

            AddNotification(this, new NotificationEventArgs($"Задача выполнена: {goal.Name}", user.Id));

            await SaveChangesAsync();

            CheckAchievements(user.Id);
        }
        public async Task RestoreGoal(Goal goal)
        {
            goal.IsComplete = false;

            goal.PassCount = 0;
            goal.SeriesCount = 0;

            await SaveChangesAsync();
        }

        public async Task CheckGoal(ApplicationUser user)
        {
            List<Goal> goals = user.Goals;
            if (goals.Any())
            {
                foreach (Goal userGoal in goals)
                {
                    if (!userGoal.IsComplete)
                    {
                        DateTime finishTime = DateTime.Now;

                        if (userGoal.GoalEnd.HasValue && userGoal.GoalEnd.Value <= finishTime)
                        {
                            switch (userGoal.RepeatId)
                            {
                                case 1:
                                    {
                                        if (userGoal.PassCount == 0)
                                        {
                                            userGoal.PassCount++;
                                            AddNotification(this, new NotificationEventArgs($"Пропущено задание: {userGoal.Name}", user.Id));
                                        }
                                        break;
                                    }
                                case 2:
                                    {
                                        while (userGoal.GoalEnd.Value <= finishTime)
                                        {
                                            userGoal.GoalEnd = userGoal.GoalEnd.Value.AddDays(1);
                                            userGoal.PassCount++;
                                            AddNotification(this, new NotificationEventArgs($"Пропущено задание: {userGoal.Name}", user.Id));
                                        }

                                        break;
                                    }
                                case 3:
                                    {
                                        while (userGoal.GoalEnd.Value <= finishTime)
                                        {
                                            userGoal.GoalEnd = userGoal.GoalEnd.Value.AddMonths(1);
                                            userGoal.PassCount++;
                                            AddNotification(this, new NotificationEventArgs($"Пропущено задание: {userGoal.Name}", user.Id));
                                        }

                                        break;
                                    }
                                case 4:
                                    {
                                        while (userGoal.GoalEnd.Value <= finishTime)
                                        {
                                            userGoal.GoalEnd = userGoal.GoalEnd.Value.AddYears(1);
                                            userGoal.PassCount++;
                                            AddNotification(this, new NotificationEventArgs($"Пропущено задание: {userGoal.Name}", user.Id));
                                        }
                                        break;
                                    }
                            }

                            userGoal.SeriesCount = 0;

                            Update(userGoal);
                            await SaveChangesAsync();
                        }
                    }            
                }
            }
        }


        public async Task<ApplicationUser> GetUser(string userId)
        {
            ApplicationUser user = await Users.Where(u => u.Id == userId)
                .Include(u => u.Catalogs)
                .Include(u => u.Goals)
                .Include(u => u.Skills)
                .Include(u => u.Atributes)
                .Include(u => u.Aligment)
                .Include(u => u.UserMoods)
                .Include(u => u.Notes)
                .Include(u => u.UserAchievements)
                .SingleAsync();

            CheckAchievements(user);

            return user;
        }
 
    }
}
