@model TaskProject.Models.Goal

@{
    Layout = null;
}

@using (Html.BeginForm(new { @class = "form-auth-small", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-12">
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-12">
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "10", style = "resize:none;" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.RepeatId, "Повторение", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-12">
            @Html.DropDownListFor(g => g.RepeatId, (IEnumerable<SelectListItem>)ViewBag.RepeateId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RepeatId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="input-group mb-2">
        <div class="col-md-6 col-12">
            <div>
                @Html.LabelFor(model => model.GoalStart, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                </div>
                <input class="form-control" type="date" name="GoalStart" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                @Html.ValidationMessageFor(model => model.GoalEnd, "", new { @class = "text-danger" })
            </div>
        </div>
            <div class="col-md-6 col-12 GoalEnd">
                <div>
                    @Html.LabelFor(model => model.GoalEnd, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                    </div>
                    <input class="form-control d-inline-block" type="date" name="GoalEnd" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                    @Html.ValidationMessageFor(model => model.GoalEnd, "", new { @class = "text-danger" })
                </div>
            </div>      
    </div>

    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.ComplicationId, "Сложность", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-12">
            @Html.DropDownListFor( g => g.ComplicationId, (IEnumerable<SelectListItem>)ViewBag.ComplicationId, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ComplicationId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-12">
            @Html.LabelFor(model => model.SkillId, "Навык", htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-12">
            @Html.DropDownListFor(g => g.SkillId,(IEnumerable<SelectListItem>)ViewBag.SkillId, new { @class = "form-control select2 select2-hidden-accessible"})
            @Html.ValidationMessageFor(model => model.SkillId)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12 text-center">
            <input type="submit" value="Добавить задачу" class="btn btn-default" onclick="post_addtask(@Model)" />
        </div>
    </div>
</div>
}

<script>
    $(document).ready(function () {
        $('#RepeatId').change(function () {
            if ($(this).val() === "1") {
                $(".GoalEnd").css("display", "block");
            }
            else {
                $(".GoalEnd").css("display", "none");
            }
        });
    });
</script>