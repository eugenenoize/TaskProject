@model TaskProject.Models.Goal

@{
    Layout = null;
}

<form asp-action="AddGoal" class="form-modal">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" maxlength="50"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label"></label>
        <textarea asp-for="Description" class="form-control" rows="5" maxlength="250" style="resize:none"></textarea>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RepeatId, "Повторение", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(g => g.RepeatId, (IEnumerable<SelectListItem>)ViewBag.RepeateId, new { @class = "form-control" })
    </div>

    <div class="input-group mb-2">
        <div class="col-md-6 col-12 GoalStart">
            <div>
                @Html.LabelFor(model => model.GoalStart, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                </div>
                <input class="form-control" type="date" name="GoalStart" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            </div>
        </div>
        <div class="col-md-6 col-12 GoalEnd">
            <div>
                @Html.LabelFor(model => model.GoalEnd, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                </div>
                <input class="form-control d-inline-block" type="date" name="GoalEnd" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ComplicationId, "Сложность", htmlAttributes: new { @class = "control-label" })
        @Html.DropDownListFor(g => g.ComplicationId, (IEnumerable<SelectListItem>)ViewBag.ComplicationId, new { @class = "form-control" })
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.SkillId, "Навык", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(g => g.SkillId, (IEnumerable<SelectListItem>)ViewBag.SkillId, new { @class = "form-control" })
    </div>

    <div class="form-group">
            @Html.LabelFor(model => model.CatalogId, "Список", htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(g => g.CatalogId, (IEnumerable<SelectListItem>)ViewBag.CatalogId, new { @class = "form-control" })
    </div>
</form>


<script>
    $(document).ready(function () {

        CheckRepeate($("#RepeatId").val());

        $('#RepeatId').change(function () {
            CheckRepeate($(this).val());
        });

        function CheckRepeate(id) {
            if (id === "0") {
                $(".GoalStart").css("display", "none");
                $(".GoalEnd").css("display", "none");
            }
            else if (id === "1") {
                $(".GoalStart").css("display", "block");
                $(".GoalEnd").css("display", "block");
            }
            else {
                $(".GoalStart").css("display", "block");
                $(".GoalEnd").css("display", "none");
            }

        };
    });
</script>